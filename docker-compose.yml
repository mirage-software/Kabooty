version: '3.9' # optional since v1.27.0
services:
  kabooty:
    build: .
    image: kabooty/86 ## !! TODO: build version, triggers a deployment
    ports:
      - '3000:3000'
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 1 ## !! TODO: implement replicas for extra redundancy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/healthy']
      interval: 5s
      timeout: 30s
      retries: 3
      start_period: 10s
    volumes:
      - data:/kabooty
    env_file:
      - stack.env
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.kabooty.entrypoints=http'
      - 'traefik.http.routers.kabooty.rule=Host(`endlessmirage.net`)'
      - 'traefik.http.middlewares.kabooty-https-redirect.redirectscheme.scheme=https'
      - 'traefik.http.routers.kabooty.middlewares=kabooty-https-redirect'
      - 'traefik.http.routers.kabooty-secure.entrypoints=https'
      - 'traefik.http.routers.kabooty-secure.rule=Host(`endlessmirage.net`)'
      - 'traefik.http.routers.kabooty-secure.tls=true'
      - 'traefik.http.routers.kabooty-secure.tls.certresolver=http'
      - 'traefik.http.routers.kabooty-secure.service=kabooty'
      - 'traefik.http.services.kabooty.loadbalancer.server.port=3000'
      - 'traefik.docker.network=proxy'
networks:
  default:
    name: proxy
    external: true
volumes:
  data: {}
